#pragma once
#include <iostream>
#include <vector>
#include "SFML/Graphics.hpp"
#include "SFML/Window.hpp"
#include "SFML/System.hpp"
#include "Tile.h"
#include "Astar.h"
#include "Button.h"
#include "Action.h"
#include "Map.h"
using namespace std;

class MoveableUnit;

struct Node
{
    MapPos t;
    shared_ptr<Node> next;
    Node(MapPos _t) :t(_t), next(NULL) {}
};

//???????????
typedef enum gameSeceneState {
    SCENE_START,SCENE_GAME, SCEN_GAMEOVER
};
typedef enum gamePlayer {
    PLAYER,AI
};

class Game
{
public:
    sf::Text Globle_text;
    sf::Text UnitText;
    sf::Text UnitAttack;
    sf::Text UnitHP;
    bool gameWin;

    mapgenerator gm;//??????????

    Font myfont;//???????

    shared_ptr<Node> drawPaths;//?°§???????

    sf::Clock clock;//?????
    sf::Clock clock2;
    sf::Clock clock3;

    Point MousePoint;//????¶À??

    Unit* MosOnUnit;//??????????¶À????

    bool MousePosChanged();//????????°§???????¶À?????Å£?????

    int horizontalTiles;//??ß÷????????????????
    

    shared_ptr<DisMoveableUnit> Base_red;//??????

    shared_ptr<DisMoveableUnit> Base_blue;//????????

    Point Red_baseP;//??????

    Point Blue_baseP;//????????

    sf::Keyboard::Key keyCode;//????

    //????¶À
    list<shared_ptr<MoveableUnit>> myunits;

    //?ßŸ???¶À
    list<shared_ptr<MoveableUnit>> enemys;

    //??????????????
    shared_ptr<sf::RectangleShape> Attackdraws;

    //??????????
    size_t turn;

    //???????????
    bool playerturn;


    sf::Texture tStartBtnNormal, tStartBtnHover, tStartBtnClick;		//????????
    sf::Texture tEndBtnNormal, tEndBtnHover, tEndBtnClick;
    sf::Texture tOverBtnNormal, tOverBtnHover, tOverBtnClick;
    Button startBtn,EndTurnBtn;												//?????button??
    Button inf, cav, sho;//??????¶À????
    Button endGame;
    sf::Texture tinf, tinfHover, tinfClick;		
    sf::Texture tcav, tcavHover, tcavClick;
    sf::Texture tsho, tshoHover, tshoClick;
    sf::Texture background;
    sf::Sprite back;

    Game();
    

    sf::RenderWindow window;//???

    bool running;//?ß÷?¶À??????

    void loadpic();//????¶À??

    vector<vector<int> > maze;//???????
    vector<MapPos> tiles;//??????

    Astar astar;//a*????????????????

    int gameSceneState;//??????
    bool gameOver;//???????

    void Initial();//?????

    //???????
    void loadMediaData();

    void AIlogic();
    
    void logicBeforeDraw();//??????ß÷?????
    void logicAfterDraw();//logic may Draw Some additional things on map
    void logicBeforeInput();

    

    //???????
    void run();
    //?????¶À
    void Unitsreset(list<shared_ptr<MoveableUnit>> us);
    void AIUnitreset();
    //????????????
    void startInput(Vector2i mousePosition, Event event);

    //????????????
    void GameInput(Vector2i mousePos, Vector2f mousePosition, Event event);

    //???????
    void Draw();
    
    //???????
    void clear();

    //??????????¶À??
    void setBase();


    //????????¶À??
    int indexAt(sf::Vector2f position);

    //???????
    void Input();

    void overinput(sf::Vector2i mousePos, sf::Event event);
    
    //????
    void spawnUnit(int team,int name, int x, int y);
    
    shared_ptr<MoveableUnit> test;
};
